package com.osi.ems.domain;
// Generated Oct 10, 2017 12:00:12 PM by Hibernate Tools 5.2.3.Final

import static javax.persistence.GenerationType.IDENTITY;

import java.util.Date;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * OsiLocations generated by hbm2java
*/
@Entity
@Table(name = "osi_locations")
public class OsiLocations implements java.io.Serializable {

	private Integer locationId;
	private OsiOrgAddresses osiOrgAddresses;
	private String locationName;
	private Integer isPrimary;
	private OsiOrganizations osiOrganizations;
	private Integer active;
	private Integer createdBy;
	private Date creationDate;
	private Integer lastUpdatedBy;
	private Date lastUpdateDate;
	private OsiRegions osiRegionsId;
	private OsiTimezones osiTimezonesId;

	public OsiLocations() {
	}

	public OsiLocations(OsiOrgAddresses osiAddresses, String locationName, Integer isPrimary, OsiOrganizations osiOrganizations,
			Integer active, Integer createdBy, Date creationDate, Integer lastUpdatedBy, Date lastUpdateDate, OsiRegions osiRegionsId, OsiTimezones osiTimezonesId) {
		this.osiOrgAddresses = osiAddresses;
		this.locationName = locationName;
		this.isPrimary = isPrimary;
		this.osiOrganizations=osiOrganizations;
		this.active = active;
		this.createdBy = createdBy;
		this.creationDate = creationDate;
		this.lastUpdatedBy = lastUpdatedBy;
		this.lastUpdateDate = lastUpdateDate;
		this.osiRegionsId=osiRegionsId;
		this.osiTimezonesId=osiTimezonesId;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "location_id", unique = true, nullable = false)
	public Integer getLocationId() {
		return this.locationId;
	}

	public void setLocationId(Integer locationId) {
		this.locationId = locationId;
	}


	@JoinColumn(name = "addressId")
	@ManyToOne(cascade = CascadeType.ALL)
	public OsiOrgAddresses getOsiAddresses() {
		return this.osiOrgAddresses;
	}

	public void setOsiAddresses(OsiOrgAddresses osiAddresses) {
		this.osiOrgAddresses = osiAddresses;
	}

	@Column(name = "location_name", length = 100)
	public String getLocationName() {
		return this.locationName;
	}

	public void setLocationName(String locationName) {
		this.locationName = locationName;
	}

	@Column(name = "is_primary")
	public Integer getIsPrimary() {
		return this.isPrimary;
	}

	public void setIsPrimary(Integer isPrimary) {
		this.isPrimary = isPrimary;
	}
	
	@JoinColumn(name = "org_id")
	@ManyToOne( cascade=CascadeType.MERGE,fetch=FetchType.EAGER)
	public OsiOrganizations getOsiOrganizations() {
		return osiOrganizations;
	}

	public void setOsiOrganizations(OsiOrganizations osiOrganizations) {
		this.osiOrganizations = osiOrganizations;
	}

	@Column(name = "active")
	public Integer getActive() {
		return this.active;
	}

	public void setActive(Integer active) {
		this.active = active;
	}

	@Column(name = "created_by")
	public Integer getCreatedBy() {
		return this.createdBy;
	}

	public void setCreatedBy(Integer createdBy) {
		this.createdBy = createdBy;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "creation_date", length = 19)
	public Date getCreationDate() {
		return this.creationDate;
	}

	public void setCreationDate(Date creationDate) {
		this.creationDate = creationDate;
	}

	@Column(name = "last_updated_by")
	public Integer getLastUpdatedBy() {
		return this.lastUpdatedBy;
	}

	public void setLastUpdatedBy(Integer lastUpdatedBy) {
		this.lastUpdatedBy = lastUpdatedBy;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "last_update_date", length = 19)
	public Date getLastUpdateDate() {
		return this.lastUpdateDate;
	}

	public void setLastUpdateDate(Date lastUpdateDate) {
		this.lastUpdateDate = lastUpdateDate;
	}
	
	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "region_id")
	public OsiRegions getOsiRegionsId() {
		return osiRegionsId;
	}

	public void setOsiRegionsId(OsiRegions osiRegionsId) {
		this.osiRegionsId = osiRegionsId;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "tz_id")
	public OsiTimezones getOsiTimezonesId() {
		return osiTimezonesId;
	}

	public void setOsiTimezonesId(OsiTimezones osiTimezonesId) {
		this.osiTimezonesId = osiTimezonesId;
	}
	

}
